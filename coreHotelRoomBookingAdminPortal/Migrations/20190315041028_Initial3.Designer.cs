// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using coreHotelRoomBookingAdminPortal.Models;

namespace coreHotelRoomBookingAdminPortal.Migrations
{
    [DbContext(typeof(HotelAdminDbContext))]
    [Migration("20190315041028_Initial3")]
    partial class Initial3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookingDate");

                    b.Property<int?>("CustomerId");

                    b.Property<int>("HotelId");

                    b.Property<double>("TotalAmount");

                    b.HasKey("BookingId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.BookingRecord", b =>
                {
                    b.Property<int>("BookingId");

                    b.Property<int>("RoomId");

                    b.Property<int>("Quantity");

                    b.HasKey("BookingId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("BookingRecords");
                });

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("CustomerAddress");

                    b.Property<long>("CustomerContactNumber");

                    b.Property<string>("CustomerEmailId");

                    b.Property<string>("CustomerFirstName");

                    b.Property<string>("CustomerLastName");

                    b.Property<string>("CustomerPassword");

                    b.Property<string>("State");

                    b.Property<int>("Zip");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HotelAddress");

                    b.Property<string>("HotelCity");

                    b.Property<long>("HotelContactNumber");

                    b.Property<string>("HotelCountry");

                    b.Property<string>("HotelDescription");

                    b.Property<string>("HotelDistrict");

                    b.Property<string>("HotelEmailId");

                    b.Property<string>("HotelImage");

                    b.Property<string>("HotelName");

                    b.Property<int>("HotelRating");

                    b.Property<string>("HotelState");

                    b.Property<int>("HotelTypeId");

                    b.HasKey("HotelId");

                    b.HasIndex("HotelTypeId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.HotelRoom", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookingId");

                    b.Property<int>("HotelId");

                    b.Property<string>("RoomDescription");

                    b.Property<string>("RoomImage");

                    b.Property<int>("RoomPrice");

                    b.Property<string>("RoomType");

                    b.HasKey("RoomId");

                    b.HasIndex("BookingId");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelRooms");
                });

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.HotelType", b =>
                {
                    b.Property<int>("HotelTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HotelTypeDescription")
                        .IsRequired();

                    b.Property<string>("HotelTypeName")
                        .IsRequired();

                    b.Property<int?>("UserDetailUserId");

                    b.HasKey("HotelTypeId");

                    b.HasIndex("UserDetailUserId");

                    b.ToTable("HotelTypes");
                });

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId");

                    b.Property<double>("PaymentAmount");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<string>("PaymentDescription");

                    b.HasKey("PaymentId");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.RoomFacility", b =>
                {
                    b.Property<int>("RoomFacilityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AirConditioner");

                    b.Property<bool>("Ekettle");

                    b.Property<bool>("IsAvilable");

                    b.Property<bool>("Refrigerator");

                    b.Property<string>("RoomFacilityDescription");

                    b.Property<int>("RoomId");

                    b.Property<bool>("Wifi");

                    b.HasKey("RoomFacilityId");

                    b.HasIndex("RoomId")
                        .IsUnique();

                    b.ToTable("RoomFacilities");
                });

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.UserDetail", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("UserContactNumber");

                    b.Property<string>("UserEmailId");

                    b.Property<string>("UserName");

                    b.Property<string>("UserPassword");

                    b.Property<string>("UserType");

                    b.HasKey("UserId");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.Booking", b =>
                {
                    b.HasOne("coreHotelRoomBookingAdminPortal.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.BookingRecord", b =>
                {
                    b.HasOne("coreHotelRoomBookingAdminPortal.Models.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("coreHotelRoomBookingAdminPortal.Models.HotelRoom", "HotelRoom")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.Hotel", b =>
                {
                    b.HasOne("coreHotelRoomBookingAdminPortal.Models.HotelType", "HotelType")
                        .WithMany("Hotels")
                        .HasForeignKey("HotelTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.HotelRoom", b =>
                {
                    b.HasOne("coreHotelRoomBookingAdminPortal.Models.Booking", "Booking")
                        .WithMany("HotelRooms")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("coreHotelRoomBookingAdminPortal.Models.Hotel", "Hotel")
                        .WithMany("HotelRooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.HotelType", b =>
                {
                    b.HasOne("coreHotelRoomBookingAdminPortal.Models.UserDetail", "UserDetail")
                        .WithMany("HotelTypes")
                        .HasForeignKey("UserDetailUserId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.Payment", b =>
                {
                    b.HasOne("coreHotelRoomBookingAdminPortal.Models.Customer", "Customer")
                        .WithOne("Payment")
                        .HasForeignKey("coreHotelRoomBookingAdminPortal.Models.Payment", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("coreHotelRoomBookingAdminPortal.Models.RoomFacility", b =>
                {
                    b.HasOne("coreHotelRoomBookingAdminPortal.Models.HotelRoom", "HotelRoom")
                        .WithOne("RoomFacility")
                        .HasForeignKey("coreHotelRoomBookingAdminPortal.Models.RoomFacility", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
